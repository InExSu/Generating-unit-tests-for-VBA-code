Attribute VB_Name = "Портянку_в_Матрёшку_TestModule"
Option Explicit

Option Private Module

'@TestModule
'@Folder("Tests")

Public Assert  As Object
Public Fakes   As Object

'@ModuleInitialize
Public Sub ModuleInitialize()
'this method runs once per module.
    Set Assert = CreateObject("Rubberduck.AssertClass")
    Set Fakes = CreateObject("Rubberduck.FakesProvider")
End Sub

'@ModuleCleanup
Public Sub ModuleCleanup()
'this method runs once per module.
    Set Assert = Nothing
    Set Fakes = Nothing
End Sub

'@TestInitialize
Public Sub TestInitialize()
'this method runs before every test in the module.
End Sub

'@TestCleanup
Public Sub TestCleanup()
'this method runs after every test in the module.
End Sub

'@TestMethod
Public Sub Строку_в_Матрёшку_TestMethod1()

    On Error GoTo TestFail

    bDebug = True

    Dim str    As String
    str = "f1" & vbCr & "f2" & vbCr & "f3" & vbCr & "f4"

    str = Строку_в_Матрёшку(str)

    ' If bDebug Then Debug.Print

TestExit:
    Exit Sub
TestFail:
    Assert.Fail "Test raised an error: #" & Err.Number & " - " & Err.Description
End Sub

'@TestMethod
Public Sub Строку_в_Функции_TestMethod1()

    On Error GoTo TestFail

    bDebug = True

    Dim str    As String
    str = "f1" & vbCr & "f2" & vbCr & "f3" & vbCr & "f4"

    str = Строку_в_Функции(str)

    'If bDebug Then Debug.Print str

TestExit:
    Exit Sub
TestFail:
    Assert.Fail "Test raised an error: #" & Err.Number & " - " & Err.Description
End Sub


'@TestMethod
Public Sub БуферОбмена_в_Матрёшку_c_Функциями_TestMethod1()

    On Error GoTo TestFail
    bDebug = True

    Dim str    As String
    str = "f1" & vbCr & "f2" & vbCr & "f3" & vbCr & "f4"

    Text_2_Clipboard str

    БуферОбмена_в_Матрёшку_c_Функциями

    str = Clipboard_2_Text

    ' If bDebug Then Debug.Print str

TestExit:
    Exit Sub
TestFail:
    Assert.Fail "Test raised an error: #" & Err.Number & " - " & Err.Description
End Sub


'@TestMethod
Public Sub Юнит_Тесты_Шаблоны_из_Буфера_TestMethod1()
    On Error GoTo TestFail
    bDebug = True
    Dim str    As String
    str = "Фан_01" & vbCrLf & "Фан_02" & vbCrLf & "Фан_03" & _
          vbCrLf & vbCrLf

    Text_2_Clipboard str

    Юнит_Тесты_Шаблоны_из_Буфера

    Dim str_Buff As String
    str_Buff = Clipboard_2_Text

    Dim Раз    As Long
    Раз = Сколько_раз("Assert.Fail", str_Buff)

    If Раз <> 3 Then _
       Err.Raise 567, vbNullString, vbNullString

TestExit:
    Exit Sub
TestFail:
    Assert.Fail "Test error: #" & Err.Number & " - " & Err.Description
End Sub

'@TestMethod
Public Sub Сколько_раз_TestMethod1()
    On Error GoTo TestFail

    bDebug = True

    If Сколько_раз("32", "321321329") <> 3 Then _
       Err.Raise 567, vbNullString, vbNullString

    If Сколько_раз("32", "13232329") <> 3 Then _
       Err.Raise 567, vbNullString, vbNullString

    Dim str    As String
    str = "z" & vbCrLf & "'z"
    str = Сколько_раз(vbCrLf, str)

TestExit:
    Exit Sub
TestFail:
    Assert.Fail "Test error: #" & Err.Number & " - " & Err.Description
End Sub


'@TestMethod
Public Sub Строка_Символы_Убрать_TestMethod1()
    On Error GoTo TestFail
    bDebug = True

    If Len(Строка_Символы_Убрать("   " & vbCrLf, 47)) > 0 Then _
       Err.Raise 567, vbNullString, vbNullString

    If Len(Строка_Символы_Убрать("abs_123", 47)) < 7 Then _
       Err.Raise 567, vbNullString, vbNullString

TestExit:
    Exit Sub
TestFail:
    Assert.Fail "Test error: #" & Err.Number & " - " & Err.Description
End Sub

'@TestMethod
Public Sub Юнит_Тест_Шаблон_из_Строки_TestMethod1()

    On Error GoTo TestFail
    bDebug = True

    Dim str    As String
    str = Юнит_Тест_Шаблон_из_Строки("F1")

    If Сколько_раз("Assert.Fail", str) <> 1 Then _
       Err.Raise 567, vbNullString, vbNullString

TestExit:
    Exit Sub
TestFail:
    Assert.Fail "Test error: #" & Err.Number & " - " & Err.Description
End Sub


'@TestMethod
Public Sub Строку_Цикла_в_Имя_Функции_TestMethod1()    ' ok
    On Error GoTo TestFail
    bDebug = True
    Settings
    Dim str    As String
    str = "For x = LBound(d1) To UBound(d1)"

    str = Строку_Цикла_в_Имя_Функции(str, False)

    If str <> "For_LBound_d1_UBound_d1" Then _
       Err.Raise 567, vbNullString, vbNullString
TestExit:
    Exit Sub
TestFail:
    Assert.Fail "Test error: #" & Err.Number & " - " & Err.Description
End Sub

